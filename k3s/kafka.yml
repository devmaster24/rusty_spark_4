# Ref as http://kafka.kafka.svc:9094
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: kafka
spec:
  selector:
    app: kafka
  ports:
    - name: internal
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: external
      port: 9094
      protocol: TCP
      targetPort: 9094

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-conf
  namespace: kafka
data:
  KAFKA_NODE_ID: '1'
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
  KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka.kafka.svc:9094'
  KAFKA_PROCESS_ROLES: 'broker,controller'
  KAFKA_CONTROLLER_QUORUM_VOTERS: '1@localhost:29093'
  KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:9094'
  KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
  KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
  KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
  KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: kafka
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      hostname: broker
      containers:
      - name: kafka
        image: apache/kafka:latest
        ports:
          - containerPort: 9092
            name: internal
          - containerPort: 9094
            name: external
        envFrom:
          - configMapRef:
              name: kafka-conf
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi


---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kakfa-ui-conf
  namespace: kafka
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /home/sparky/Documents/kafka-ui
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - sparky-4

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: kakfa-ui-conf-claim
    namespace: kafka
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: kafka
  labels:
    app: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        env:
          - name: DYNAMIC_CONFIG_ENABLED
            value: 'true'
        volumeMounts:
        - mountPath: "/etc/kafkaui/"
          name: local-conf
        resources:
          limits:
            cpu: 2000m
            memory: 2Gi
      volumes:
      - name: local-conf
        persistentVolumeClaim:
          claimName: kakfa-ui-conf-claim